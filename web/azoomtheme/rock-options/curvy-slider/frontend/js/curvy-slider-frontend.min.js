(function() {
  jQuery.curvySlider = function(ia, ja, ka, la, ma, X) {
    function na() {
      2 < h.length && h.splice(2, 1);
      for (var d = a = 0;d < h.scenes.length;d++) {
        if ("" != h.scenes[d].sceneDetails.fallbackURL) {
          b[a] = {};
          b[a].sceneID = "curvy-fallback-" + a;
          b[a].sceneDetails = {};
          b[a].sceneDetails.sceneTime = h.scenes[d].sceneDetails.sceneTime;
          b[a].sceneDetails.sceneDelay = h.scenes[d].sceneDetails.sceneDelay;
          var e = '<img src="' + h.scenes[d].sceneDetails.fallbackURL + '" />';
          b[a].imageString = 0 === a ? '<div class="' + b[a].sceneID + '">' + e + "</div>" : '<div class="' + b[a].sceneID + ' hide">' + e + "</div>";
          jQuery(m + " .curvy-slider-fallback-canvas").append(b[a].imageString);
          Y(a);
          a++;
        }
      }
      a = b.length - 1;
    }
    function Y(d) {
      d = '<div class="curvy-nav-elem ' + (0 === d ? "active" : "") + '" data-ref="nav-elem-' + d + '"></div>';
      jQuery(m + " .curvy-slider-nav-container .curvy-slider-nav").append(d);
    }
    function N(d) {
      d >= b.length || (jQuery(m + " .curvy-fallback-" + a).animate({opacity:"0"}, Number(b[a].sceneDetails.sceneTime), function() {
        jQuery(this).addClass("hide");
      }), jQuery(m + " .curvy-fallback-" + d).css("opacity", "0").removeClass("hide"), jQuery(m + " .curvy-fallback-" + d).animate({opacity:"1"}, 1E3 * Number(b[d].sceneDetails.sceneTime), function() {
        a = d;
      }));
    }
    function oa() {
      var d = jQuery("#" + t).parents(".rockthemes-curvy-slider"), a = parseInt(d.width() * h.slider_height / h.slider_width);
      d.parents(".rockthemes-unique-grid").length && "true" === d.parents(".rockthemes-unique-grid").attr("data-rsb-fullscreen") && (a = d.parents(".rockthemes-unique-grid").height());
      d.css({height:a + "px", position:"relative"});
    }
    function H() {
      return navigator.userAgent.match(/msie [7]/i) || navigator.userAgent.match(/msie [8]/i) ? !0 : !1;
    }
    function pa() {
      b = [];
      var d = h.fonts ? h.fonts : [];
      if (0 < d.length) {
        for (var a = 0;a < d.length;a++) {
          O.push(d[a]);
        }
        WebFont.load({google:{families:O}, fontactive:function(d, a) {
          Z++;
          Z >= O.length && !F && (F = !0, P());
        }, active:function() {
          F || (F = !0, P());
        }});
      } else {
        F = !0, P();
      }
    }
    function P() {
      for (var d = [], a = 0;a < h.scenes.length;a++) {
        if (Q && -1 < h.scenes[a].bg.bgType.indexOf("video") && "" !== h.scenes[a].sceneDetails.fallbackURL && h.scenes[a].imageArray.push({id:"scene_fallback_" + a, url:h.scenes[a].sceneDetails.fallbackURL}), -1 < h.scenes[a].bg.bgType.indexOf("image") && "" !== h.scenes[a].bg.bgURL && h.scenes[a].imageArray.push({id:"scene_bg_" + a, url:h.scenes[a].bg.bgURL}), "undefined" != typeof h.scenes[a].imageArray) {
          for (var b = 0;b < h.scenes[a].imageArray.length;b++) {
            d.push({id:h.scenes[a].imageArray[b].id, url:h.scenes[a].imageArray[b].url});
          }
        }
      }
      if (0 < d.length) {
        a = new CAAT.Module.Preloader.Preloader;
        for (b = 0;b < d.length;b++) {
          a.addElement(d[b].id, d[b].url);
        }
        a.load(function(a) {
          aa(a);
        });
      } else {
        aa();
      }
    }
    function I(d) {
      d >= b.length || (p.easeInOut(d, b[d].sceneDetails.incomingMotion, b[d].sceneDetails.incomingAnchor, a, b[a].sceneDetails.incomingMotion, b[a].sceneDetails.incomingAnchor, 1E3 * b[a].sceneDetails.sceneTime, 1, r(b[d].sceneDetails.incomingEasing), r(b[a].sceneDetails.incomingEasing)), a = d, "activate_nav" === y && (jQuery("#scenes-navigation ul li.scene-nav-elem.active").removeClass("active"), jQuery("#scene-nav-" + d).addClass("active")));
    }
    function D(d, e, f) {
      d = (d = "undefined" === typeof d || null == d ? null : d) ? (new CAAT.PathUtil.Path).beginPath(parseInt(d[0].x) - 240, parseInt(d[0].y) - 150).addQuadricTo(parseInt(d[1].x) - 240, parseInt(d[1].y) - 150, parseInt(d[2].x) - 240, parseInt(d[2].y) - 150).endPath() : (new CAAT.PathUtil.Path).beginPath(1150, 219).addQuadricTo(1130, 350, 780, 280).endPath();
      b[a].path.addSegment(d);
      b[a].pa.setPath(b[a].path);
      return d;
    }
    function aa(d) {
      CAAT.RETINA_DISPLAY_ENABLED = !0;
      CAAT.IOS_RETINA_LIMIT = 5242880;
      jQuery("#" + t).parents(".rockthemes-curvy-slider").find(".loader-container").length && jQuery("#" + t).parents(".rockthemes-curvy-slider").find(".loader-container").remove();
      jQuery("#" + t).parents(".rockthemes-curvy-slider").css({height:"", position:""});
      jQuery("#" + t).parents(".rockthemes-curvy-slider").addClass("curvy-loaded");
      p = (new CAAT.Foundation.Director).initialize(w, x, t);
      R ? p.enableResizeEvents(CAAT.Foundation.Director.RESIZE_HEIGHT) : p.enableResizeEvents(CAAT.Foundation.Director.RESIZE_PROPORTIONAL);
      p.setImagesCache(d);
      if (R) {
        var e;
        jQuery(window).resize(function() {
          "undefined" != typeof e && clearTimeout(e);
          e = setTimeout(function() {
            jQuery(document).trigger("rockthemes:sticky_menu_resize");
            "true" !== z || u ? B() : (S(), J());
          }, 800);
        });
      }
      ba = (new CAAT.PathUtil.Path).endPath();
      (new CAAT.Foundation.UI.PathActor).enableEvents(!0).setBounds(0, 0, p.width, p.height).setInteractive(!0).setPath(ba).showBoundingBox(!1);
      qa();
      0 < b.length || (a = b.length, b[a] = {}, b[a].theScene = p.createScene(), b[a].theSceneID = "scene-" + a, b[a].path = (new CAAT.PathUtil.Path).endPath(), b[a].pa = (new CAAT.Foundation.UI.PathActor).setBounds(0, 0, p.width, p.height).setInteractive(!0).setPath(b[a].path).showBoundingBox(!1), b[a].bg = {}, b[a].bg.bgActor = ca("", b[a].theSceneID), b[a].theScene.addChildAt(b[a].bg.bgActor, 0), b[a].imageArray = [], b[a].sceneDetails = {}, b[a].sceneDetails.sceneTime = .65, b[a].sceneDetails.sceneDelay =
          6, b[a].sceneDetails.incomingMotion = 0, b[a].sceneDetails.incomingAnchor = 0, b[a].sceneDetails.incomingEasing = "easeOut", b[a].theSceneID.split("-"), b[a].actorElems = []);
      CAAT.loop(60);
      "true" == z ? (I(0), "activate_nav" === y ? (jQuery(m + ' .curvy-nav-elem[data-ref="nav-elem-0"]').addClass("active"), jQuery(m + " #playAllScenesBtn").trigger("click")) : J()) : (I(0), "activate_nav" === y && jQuery(m + ' .curvy-nav-elem[data-ref="nav-elem-0"]').addClass("active"));
      var f = 0, c = 0;
      jQuery("#" + t).on("touchstart", function(a) {
        f = a.originalEvent.touches[0].pageX;
      }).on("touchmove", function(a) {
        c = f - a.originalEvent.touches[0].pageX;
      }).on("touchend", function(a) {
        15 > Math.abs(c) || (0 > c ? da() : ea());
      });
      jQuery(m).animate({opacity:1}, 180);
      jQuery(document).trigger("rockthemes:sticky_menu_resize");
      jQuery(document).trigger("rockthemes:intro_effect_canvas_resize");
      jQuery(document).trigger("curvyslider:reset_side_nav");
      jQuery(document).trigger("curvyslider:curvy_ready");
    }
    function ca(a, b, f) {
      jQuery(m).append('<div class="curvyslider-video" style="display:none;"><video id="' + T + "_" + f + '" class="curvybgvideo_' + f + '" loop="true" preload="auto"><source src="' + a + '" type="video/mp4" /></video></div>');
      jQuery(".curvybgvideo_" + f).on("canplay canplaythrough", function() {
        jQuery(".curvybgvideo_" + f).off("canplay canplaythrough");
        jQuery(".curvybgvideo_" + f)[0].currentTime = 0;
        jQuery(".curvybgvideo_" + f)[0].oncanplay = !1;
        jQuery(".curvybgvideo_" + f).attr("data-video-ready-to-start", "true");
      }).load();
      var c = document.getElementById(T + "_" + f);
      a = document.createElement("canvas");
      a.width = w;
      a.height = x;
      var h = a.getContext("2d");
      a = (new CAAT.Foundation.SpriteImage).initialize(a, 1, 1);
      b.createTimer(0, 33, function(a, d, b) {
        b.reset(a);
        h.drawImage(c, 0, 0, w, x);
      });
      b = (new CAAT.Foundation.ActorContainer).setBounds(0, 0, p.width, p.height);
      a = (new CAAT.Foundation.Actor).setBackgroundImage(a.getRef(), !0);
      b.addChild(a);
      return b;
    }
    function qa() {
      2 < h.length && h.splice(2, 1);
      for (var d = a = 0;d < h.scenes.length;d++) {
        var e = h.scenes[d];
        b[a] = {};
        b[a].theScene = p.createScene();
        b[a].path = (new CAAT.PathUtil.Path).endPath();
        b[a].pa = (new CAAT.Foundation.UI.PathActor).setBounds(0, 0, p.width, p.height).setInteractive(!0).setPath(b[a].path).showBoundingBox(!1);
        b[a].imageArray = "undefined" != typeof h.scenes[d].imageArray ? h.scenes[d].imageArray : [];
        b[a].bg = {};
        b[a].bg.bgType = h.scenes[d].bg.bgType;
        b[a].bg.bgURL = h.scenes[d].bg.bgURL;
        b[a].bg.bgColor = h.scenes[d].bg.bgColor;
        b[a].bg.bgVideoURL = h.scenes[d].bg.bgVideoURL;
        b[a].bg.bgColorAlpha = h.scenes[d].bg.bgColorAlpha;
        b[a].bg.fallbackURL = h.scenes[d].sceneDetails.fallbackURL;
        b[a].sceneDetails = {};
        b[a].sceneDetails.sceneTime = h.scenes[d].sceneDetails.sceneTime;
        b[a].sceneDetails.sceneDelay = h.scenes[d].sceneDetails.sceneDelay;
        b[a].sceneDetails.incomingMotion = h.scenes[d].sceneDetails.incomingMotion;
        b[a].sceneDetails.incomingAnchor = h.scenes[d].sceneDetails.incomingAnchor;
        b[a].sceneDetails.incomingEasing = h.scenes[d].sceneDetails.incomingEasing;
        b[a].theSceneID = "scene-" + a;
        b[a].theSceneID.split("-");
        Q && -1 < b[a].bg.bgType.indexOf("video") && (b[a].bg.bgURL = b[a].bg.fallbackURL);
        if ("transparent" == b[a].bg.bgType) {
          b[a].bg.bgActor = (new CAAT.Foundation.UI.ShapeActor).setShape(CAAT.Foundation.UI.ShapeActor.SHAPE_RECTANGLE).centerAt(0, 0).setSize(w, x), b[a].theScene.addChildAt(b[a].bg.bgActor, 0);
        } else {
          if ("image" == b[a].bg.bgType || Q && "" !== b[a].bg.bgURL) {
            var f = w / 2, c = x / 2;
            b[a].bg.bgActor = (new CAAT.Foundation.ActorContainer).setBounds(0, 0, p.width, p.height).setSize(w, x).centerAt(f, c);
            b[a].theScene.addChildAt(b[a].bg.bgActor, 0);
            ra(b[a].bg.bgActor, b[a].theSceneID, b[a].bg.bgURL);
          } else {
            "color" == b[a].bg.bgType ? (b[a].bg.bgActor = (new CAAT.Foundation.UI.ShapeActor).setShape(CAAT.Foundation.UI.ShapeActor.SHAPE_RECTANGLE).centerAt(0, 0).setSize(w, x), b[a].theScene.addChildAt(b[a].bg.bgActor, 0), b[a].bg.bgActor.setFillStyle(b[a].bg.bgColor)) : -1 < b[a].bg.bgType.indexOf("video") && (b[a].bg.bgActor = ca(b[a].bg.bgVideoURL, b[a].theScene, b[a].theSceneID), -1 < b[a].bg.bgType.indexOf("color") && (f = (new CAAT.Foundation.UI.ShapeActor).setShape(CAAT.Foundation.UI.ShapeActor.SHAPE_RECTANGLE).centerAt(0,
                0).setSize(w, x).setAlpha(b[a].bg.bgColorAlpha), b[a].bg.bgActor.addChild(f), f.setFillStyle(b[a].bg.bgColor)), b[a].theScene.addChildAt(b[a].bg.bgActor, 0));
          }
        }
        b[a].actorElems = [];
        for (f = 0;f < e.actorElems.length;f++) {
          switch(e.actorElems[f].objType) {
            case "singleText":
              fa("scene-0", e.actorElems[f]);
              break;
            case "singleBoxedText":
              var c = e.actorElems[f], m = (c = "undefined" === typeof c || null == c ? null : c) ? c.elemID : U(), g = "Baumans";
              c && c.objFont && (g = c.objFont, g.indexOf(":") && (g = g.split(":"), g = g[0]));
              g = (new CAAT.Foundation.UI.TextActor).setFont(c ? c.fontStyle + " " + c.objFontSize + " " + g : "40px Baumans").setText(c ? c.objText : jQuery("#" + m + " .text-holder").val()).setShadow(c && c.enable_shadow ? c.enable_shadow : !1).setTextFillStyle(c ? c.objColor : "#f0f0f0").emptyBehaviorList();
              g.centerAt((g.textWidth + parseInt(c ? c.paddingH : 40)) / 2, (g.textHeight + parseInt(c ? c.paddingV : 30)) / 2);
              var k = (new CAAT.Foundation.ActorContainer).setLocation(c ? c.coordsArray[0].x - 240 : 1800, c ? c.coordsArray[0].y - 150 : 400).setAlpha(c ? c.startAlpha : 1).enableEvents(!0).emptyBehaviorList();
              k.addChild(g);
              var n, l = g.textWidth + parseInt(c ? c.paddingH : 40);
              n = g.textHeight + parseInt(c ? c.paddingV : 30);
              var q = parseInt(c ? c.bgRadius : 10), t = c ? c.objBGColor : "#333333", u = document.createElement("canvas"), q = "undefined" == typeof q ? q = 20 : q, v = u.getContext("2d");
              u.width = l;
              u.height = n;
              v.fillStyle = t;
              v.clearRect(0, 0, l, n);
              v.beginPath();
              v.moveTo(q, 0);
              v.lineTo(l - q, 0);
              v.quadraticCurveTo(l, 0, l, q);
              v.lineTo(l, n - q);
              v.quadraticCurveTo(l, n, l - q, n);
              v.lineTo(q, n);
              v.quadraticCurveTo(0, n, 0, n - q);
              v.lineTo(0, q);
              v.quadraticCurveTo(0, 0, q, 0);
              v.closePath();
              v.fill();
              n = u;
              k.setBackgroundImage(n);
              q = c ? D(c.coordsArray, k, c.elemID) : D(null, k, m);
              c && 1 == c.hideBeginning && k.setAlpha(0);
              "true" != z && k.setGlobalAlpha(!0).addBehavior((new CAAT.Behavior.PathBehavior).setPath(q).setDelayTime(c ? parseInt(c.delayTime) : 1800, c ? parseInt(c.motionTime) : 1E3).setCycle(!1).setAutoRotate(c && c.autoRotate ? !0 : !1, c && c.autoRotate ? CAAT.PathBehavior.autorotate.FREE : !1).setInterpolator(c ? r(c.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4))).addBehavior((new CAAT.Behavior.AlphaBehavior).setInterpolator(c ? r(c.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4)).setValues(c ?
                  c.startAlpha : 1, c ? c.endAlpha : 1).setDelayTime(c ? parseInt(c.delayTime) : 1800, c ? parseInt(c.motionTime) : 1E3)).addBehavior((new CAAT.Behavior.ScaleBehavior).setInterpolator(c ? r(c.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4)).setValues(c ? c.scaleStart : 1, c ? c.scaleEnd : 1, c ? c.scaleStart : 1, c ? c.scaleEnd : 1).setDelayTime(c ? parseInt(c.delayTime) : 1800, c ? parseInt(c.motionTime) : 1E3));
              l = c ? c : {};
              c || (l.coordsArray = [], l.delayTime = 650, l.motionTime = 650, l.outOfSceneTime = 650, l.waitOnSceneTime = 3, l.outOfSceneMotion = "noMotion", l.objType = "singleBoxedText", l.objText = "New Text", l.fontStyle = "", l.objSrc = "", l.linkActive = !1, l.objLink = "", l.objBorderColor = "", l.objColor = "#3e3e3e", l.objFontSize = "40px", l.objFont = "sans", l.elemID = m, l.autoRotate = !1, l.hideBeginning = !1, l.easingName = "", l.startAlpha = 1, l.endAlpha = 1, l.scaleStart = 1, l.scaleEnd =
                  1);
              l.actor_bg_shape = n;
              l.pathRemoved = !1;
              l.path = q;
              n = l.path.numControlPoints();
              if (0 >= l.coordsArray.length) {
                for (q = 0;q < n;q++) {
                  l.coordsArray.push(l.path.getControlPoint(q));
                }
              }
              l.Actor = k;
              l.textActor = g;
              l.easing = c ? r(c.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4);
              b[a].actorElems || (b[a].actorElems = []);
              b[a].actorElems.push(l);
              c && c.linkActive && V(k, c.objLink, c);
              b[a].theScene.addChildAt(k, b[a].theScene.childrenList.length);
              c && "noMotion" != c.outOfSceneMotion && "true" != z && K(l, l.outOfSceneMotion);
              W(m);
              break;
            case "image":
              c = e.actorElems[f];
              m = (c = "undefined" === typeof c || null == c ? null : c) ? c.elemID : U();
              c && c.objSrc.substr(c.objSrc.lastIndexOf("/") + 1);
              g = (new CAAT.Foundation.Actor).setLocation(c ? c.coordsArray[0].x - 240 : 1800, c ? c.coordsArray[0].y - 150 : 400).enableEvents(!0).setPositionAnchor(.5, .5).emptyBehaviorList();
              c && g.setBackgroundImage(p.getImage(c.elemID));
              l = c ? D(c.coordsArray, g, c.elemID) : D(null, g, m);
              c && 1 == c.hideBeginning && g.setAlpha(0);
              k = !1;
              if (c && 1 == c.autoRotate && (jQuery("#" + m + " label.autoRotate input").attr("checked", "checked"), c.auto_rotation_mode)) {
                switch(c.auto_rotation_mode) {
                  case "LEFT_TO_RIGHT":
                    k = CAAT.PathBehavior.autorotate.LEFT_TO_RIGHT;
                    break;
                  case "RIGHT_TO_LEFT":
                    k = CAAT.PathBehavior.autorotate.RIGHT_TO_LEFT;
                    break;
                  case "FREE":
                    k = CAAT.PathBehavior.autorotate.FREE;
                    break;
                  default:
                    k = CAAT.PathBehavior.autorotate.FREE;
                }
              }
              "true" != z && g.addBehavior((new CAAT.Behavior.PathBehavior).setValues(l).setDelayTime(c ? parseInt(c.delayTime) : 1800, c ? parseInt(c.motionTime) : 1E3).setCycle(!1).setAutoRotate(c && c.autoRotate ? !0 : !1, c && c.autoRotate ? k : !1).setInterpolator(c ? r(c.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4))).addBehavior((new CAAT.Behavior.AlphaBehavior).setInterpolator(c ? r(c.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4)).setValues(c ?
                  c.startAlpha : 1, c ? c.endAlpha : 1).setDelayTime(c ? parseInt(c.delayTime) : 1800, c ? parseInt(c.motionTime) : 1E3)).addBehavior((new CAAT.Behavior.ScaleBehavior).setInterpolator(c ? r(c.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4)).setValues(c ? c.scaleStart : 1, c ? c.scaleEnd : 1, c ? c.scaleStart : 1, c ? c.scaleEnd : 1).setDelayTime(c ? parseInt(c.delayTime) : 1800, c ? parseInt(c.motionTime) : 1E3));
              k = c ? c : {};
              c || (k.coordsArray = [], k.delayTime = 650, k.motionTime = 650, k.outOfSceneTime = 650, k.waitOnSceneTime = 3, k.outOfSceneMotion = "noMotion", k.objType = "image", k.objText = "New Text", k.fontStyle = "", k.objSrc = "", k.linkActive = !1, k.objLink = "", k.objBorderColor = "", k.objColor = "#3e3e3e", k.objFontSize = "40px", k.objFont = "sans", k.elemID = m, k.autoRotate = !1, k.hideBeginning = !1, k.easingName = "", k.startAlpha = 1, k.endAlpha = 1, k.scaleStart = 1, k.scaleEnd =
                  1);
              k.pathRemoved = !1;
              k.path = l;
              l = k.path.numControlPoints();
              for (n = 0;n < l;n++) {
              }
              if (0 >= k.coordsArray.length) {
                for (n = 0;n < l;n++) {
                  k.coordsArray.push(k.path.getControlPoint(n));
                }
              }
              for (n = 0;n < l;n++) {
              }
              k.Actor = g;
              k.easing = c ? r(c.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4);
              b[a].actorElems || (b[a].actorElems = []);
              b[a].actorElems.push(k);
              c && c.linkActive && V(g, c.objLink);
              b[a].theScene.addChildAt(g, b[a].theScene.childrenList.length);
              c && "noMotion" != c.outOfSceneMotion && K(k, k.outOfSceneMotion);
              for (n = 0;n < l;n++) {
              }
              W(m);
              break;
            case "button":
              addButton("scene-0");
              break;
            default:
              fa("scene-0");
          }
        }
        "nav_regular" === y && Y(a);
        a++;
      }
      a = b.length - 1;
    }
    function fa(d, e) {
      var f = (e = "undefined" === typeof e || null == e ? null : e) ? e.elemID : U(), c = "Baumans";
      e && e.objFont && (c = e.objFont, c.indexOf(":") && (c = c.split(":"), c = c[0]));
      var c = (new CAAT.Foundation.UI.TextActor).setFont(e ? e.fontStyle + " " + e.objFontSize + " " + c : "40px Baumans").setText(e ? e.objText : jQuery("#" + f + " .text-holder").val()).setLocation(e ? e.coordsArray[0].x - 240 : 1800, e ? e.coordsArray[0].y - 150 : 400).setAlpha(e ? e.startAlpha : 1).setTextFillStyle(e ? e.objColor : "#3e3e3e").setShadow(e && e.enable_shadow ? e.enable_shadow : !1).enableEvents(!0).emptyBehaviorList(), h;
      h = e ? D(e.coordsArray, c, e.elemID) : D(null, c, f);
      e && 1 == e.hideBeginning && c.setAlpha(0);
      "true" != z && c.addBehavior((new CAAT.Behavior.PathBehavior).setPath(h).setDelayTime(e ? parseInt(e.delayTime) : 1800, e ? parseInt(e.motionTime) : 1E3).setCycle(!1).setAutoRotate(e && e.autoRotate ? !0 : !1, e && e.autoRotate ? CAAT.PathBehavior.autorotate.FREE : !1).setInterpolator(e ? r(e.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4))).addBehavior((new CAAT.Behavior.AlphaBehavior).setInterpolator(e ? r(e.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4)).setValues(e ?
          e.startAlpha : 1, e ? e.endAlpha : 1).setDelayTime(e ? parseInt(e.delayTime) : 1800, e ? parseInt(e.motionTime) : 1E3)).addBehavior((new CAAT.Behavior.ScaleBehavior).setInterpolator(e ? r(e.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4)).setValues(e ? e.scaleStart : 1, e ? e.scaleEnd : 1, e ? e.scaleStart : 1, e ? e.scaleEnd : 1).setDelayTime(e ? parseInt(e.delayTime) : 1800, e ? parseInt(e.motionTime) : 1E3));
      var g = e ? e : {};
      e || (g.coordsArray = [], g.delayTime = 650, g.motionTime = 650, g.outOfSceneTime = 650, g.waitOnSceneTime = 3, g.outOfSceneMotion = "noMotion", g.objType = "singleText", g.objText = "New Text", g.fontStyle = "", g.objSrc = "", g.linkActive = !1, g.objLink = "", g.objBorderColor = "", g.objColor = "#3e3e3e", g.objFontSize = "40px", g.objFont = "sans", g.elemID = f, g.autoRotate = !1, g.hideBeginning = !1, g.easingName = "", g.startAlpha = 1, g.endAlpha = 1, g.scaleStart = 1, g.scaleEnd = 1);
      g.pathRemoved = !1;
      g.path = h;
      h = g.path.numControlPoints();
      if (0 >= g.coordsArray.length) {
        for (var k = 0;k < h;k++) {
          g.coordsArray.push(g.path.getControlPoint(k));
        }
      }
      g.Actor = c;
      g.easing = e ? r(e.easingName) : (new CAAT.Interpolator).createExponentialOutInterpolator(4);
      b[a].actorElems || (b[a].actorElems = []);
      b[a].actorElems.push(g);
      e && e.linkActive && V(c, e.objLink);
      b[a].theScene.addChildAt(c, b[a].theScene.childrenList.length);
      e && "noMotion" != e.outOfSceneMotion && K(g, g.outOfSceneMotion);
      W(f);
    }
    function ra(d, e, f, c) {
      var h = {};
      h.url = f;
      h.id = e;
      "undefined" != typeof b[a] && b[a].imageArray.push(h);
      (new CAAT.Module.Preloader.Preloader).addElement(e, f).load(function(a) {
        d.setBackgroundImage(a[a.length - 1].image);
        "undefined" != typeof callback && c();
      });
    }
    function V(a, b, f) {
      "undefined" == typeof f ? (a.mouseClick = function(c) {
        1 === a.frameAlpha && (window.location.href = b);
      }, a.touchEnd = function(c) {
        1 === a.frameAlpha && (window.location.href = b);
      }, a.mouseEnter = function(b) {
        1 === a.frameAlpha && (document.getElementById(t).style.cursor = "pointer");
      }, a.mouseExit = function(b) {
        1 === a.frameAlpha && (document.getElementById(t).style.cursor = "default");
      }) : "singleBoxedText" != f.objType || f.buttonCover || (f.buttonCover = (new CAAT.Foundation.UI.ShapeActor).setShape(CAAT.Foundation.UI.ShapeActor.SHAPE_RECTANGLE).setBounds(0, 0, a.width, a.height).setFillStyle("blue").setAlpha(0), f.buttonCover.mouseClick = function(c) {
        1 === a.frameAlpha && (window.location.href = b);
      }, f.buttonCover.touchEnd = function(c) {
        1 === a.frameAlpha && (window.location.href = b);
      }, f.buttonCover.mouseEnter = function(b) {
        1 === a.frameAlpha && (document.getElementById(t).style.cursor = "pointer", f.objBGHoverColor && (b = f.actor_bg_shape.getContext("2d"), b.fillStyle = f.objBGHoverColor, b.fill()));
      }, f.buttonCover.mouseExit = function(b) {
        1 === a.frameAlpha && (document.getElementById(t).style.cursor = "default", f.objBGHoverColor && (b = f.actor_bg_shape.getContext("2d"), b.fillStyle = f.objBGColor, b.fill()));
      }, a.addChild(f.buttonCover), f.actor_bg_shape.fillStyle = "red");
    }
    function J() {
      E || (E = !0, u = !1, L());
    }
    function S() {
      u = !0;
      for (var a = 0;a < G.length;a++) {
        G[a].pause();
      }
      "undefined" != typeof A && clearInterval(A);
      E = !1;
    }
    function L() {
      A = setTimeout(ga, 1E3 * b[a].sceneDetails.sceneDelay);
      ha = (new Date).getTime();
      H() || B();
    }
    function ga() {
      var d = a;
      d++;
      d >= b.length && (d = 0);
      H() ? N(d) : I(d);
      a = d;
      jQuery(m + " .curvy-nav-elem.active").removeClass("active");
      jQuery(m + ' .curvy-nav-elem[data-ref="nav-elem-' + a + '"]').addClass("active");
      u || L();
    }
    function B() {
      for (var d = 0;d < G.length;d++) {
        G[d].pause();
      }
      for (d = 0;d < b[a].actorElems.length;d++) {
        b[a].actorElems[d].Actor.setLocation(b[a].actorElems[d].coordsArray[0].x - 240, b[a].actorElems[d].coordsArray[0].y - 150).setAlpha(1 == b[a].actorElems[d].hideBeginning ? 0 : b[a].actorElems[d].startAlpha);
      }
      -1 < b[a].bg.bgType.indexOf("video") && jQuery(".curvybgvideo_scene-" + a).length && jQuery(".curvybgvideo_scene-" + a)[0] && jQuery(".curvybgvideo_scene-" + a).attr("data-video-ready-to-start") && "true" === jQuery(".curvybgvideo_scene-" + a).attr("data-video-ready-to-start") && (jQuery(".curvybgvideo_scene-" + a)[0].currentTime = 0, jQuery(".curvybgvideo_scene-" + a)[0].play(), G.push(jQuery(".curvybgvideo_scene-" + a)[0]));
      for (d = 0;d < b[a].actorElems.length;d++) {
        var e = !1;
        if (b[a].actorElems[d] && 1 == b[a].actorElems[d].autoRotate && b[a].actorElems[d].auto_rotation_mode) {
          switch(b[a].actorElems[d].auto_rotation_mode) {
            case "LEFT_TO_RIGHT":
              e = CAAT.PathBehavior.autorotate.LEFT_TO_RIGHT;
              break;
            case "RIGHT_TO_LEFT":
              e = CAAT.PathBehavior.autorotate.RIGHT_TO_LEFT;
              break;
            case "FREE":
              e = CAAT.PathBehavior.autorotate.FREE;
              break;
            default:
              e = CAAT.PathBehavior.autorotate.FREE;
          }
        }
        b[a].actorElems[d].Actor.emptyBehaviorList().setRotation(0).setGlobalAlpha(!0).setScale(b[a].actorElems[d].scaleStart, b[a].actorElems[d].scaleStart).addBehavior((new CAAT.Behavior.PathBehavior).setValues(b[a].actorElems[d].path).setDelayTime(b[a].actorElems[d].delayTime, b[a].actorElems[d].motionTime).setCycle(!1).setAutoRotate(b[a].actorElems[d].autoRotate ? !0 : !1, b[a].actorElems[d].autoRotate ? e : !1).setInterpolator(b[a].actorElems[d].easing)).addBehavior((new CAAT.Behavior.AlphaBehavior).setValues(b[a].actorElems[d].startAlpha,
            b[a].actorElems[d].endAlpha).setDelayTime(b[a].actorElems[d].delayTime, b[a].actorElems[d].motionTime).setInterpolator(b[a].actorElems[d].easing)).addBehavior((new CAAT.Behavior.ScaleBehavior).setValues(b[a].actorElems[d].scaleStart, b[a].actorElems[d].scaleEnd, b[a].actorElems[d].scaleStart, b[a].actorElems[d].scaleEnd).setDelayTime(b[a].actorElems[d].delayTime, b[a].actorElems[d].motionTime).setInterpolator(b[a].actorElems[d].easing));
        "noMotion" != b[a].actorElems[d].outOfSceneMotion && K(b[a].actorElems[d], b[a].actorElems[d].outOfSceneMotion);
      }
    }
    function r(a) {
      switch(a) {
        case "Linear":
          return (new CAAT.Behavior.Interpolator).createLinearInterpolator(!1, !1);
        case "LinearBounce":
          return (new CAAT.Behavior.Interpolator).createLinearInterpolator(!0, !1);
        case "ExpoIn":
          return (new CAAT.Behavior.Interpolator).createExponentialInInterpolator(2, !1);
        case "ExpoOut":
          return (new CAAT.Behavior.Interpolator).createExponentialOutInterpolator(2, !1);
        case "ExpoInOut":
          return (new CAAT.Behavior.Interpolator).createExponentialInOutInterpolator(2, !1);
        case "ExpoInBounce":
          return (new CAAT.Behavior.Interpolator).createExponentialInInterpolator(2, !0);
        case "ExpoOutBounce":
          return (new CAAT.Behavior.Interpolator).createExponentialOutInterpolator(2, !0);
        case "ExpoInOutBounce":
          return (new CAAT.Behavior.Interpolator).createExponentialInOutInterpolator(2, !0);
        case "ExpoIn4":
          return (new CAAT.Behavior.Interpolator).createExponentialInInterpolator(4, !1);
        case "ExpoOut4":
          return (new CAAT.Behavior.Interpolator).createExponentialOutInterpolator(4, !1);
        case "ExpoInOut4":
          return (new CAAT.Behavior.Interpolator).createExponentialInOutInterpolator(4, !1);
        case "ExpoIn4Bounce":
          return (new CAAT.Behavior.Interpolator).createExponentialInInterpolator(4, !0);
        case "ExpoOut4Bounce":
          return (new CAAT.Behavior.Interpolator).createExponentialOutInterpolator(4, !0);
        case "ExpoInOut4Bounce":
          return (new CAAT.Behavior.Interpolator).createExponentialInOutInterpolator(4, !0);
        case "ExpoIn6":
          return (new CAAT.Behavior.Interpolator).createExponentialInInterpolator(6, !1);
        case "ExpoOut6":
          return (new CAAT.Behavior.Interpolator).createExponentialOutInterpolator(6, !1);
        case "ExpoInOut6":
          return (new CAAT.Behavior.Interpolator).createExponentialInOutInterpolator(6, !1);
        case "ExpoIn6Bounce":
          return (new CAAT.Behavior.Interpolator).createExponentialInInterpolator(6, !0);
        case "ExpoOut6Bounce":
          return (new CAAT.Behavior.Interpolator).createExponentialOutInterpolator(6, !0);
        case "ExpoInOut6Bounce":
          return (new CAAT.Behavior.Interpolator).createExponentialInOutInterpolator(6, !0);
        case "BounceIn":
          return (new CAAT.Behavior.Interpolator).createBounceInInterpolator(!1);
        case "BounceOut":
          return (new CAAT.Behavior.Interpolator).createBounceOutInterpolator(!1);
        case "BounceInOut":
          return (new CAAT.Behavior.Interpolator).createBounceInOutInterpolator(!1);
        case "BounceInBounce":
          return (new CAAT.Behavior.Interpolator).createBounceInInterpolator(!0);
        case "BounceOutBounce":
          return (new CAAT.Behavior.Interpolator).createBounceOutInterpolator(!0);
        case "BounceInOutBounce":
          return (new CAAT.Behavior.Interpolator).createBounceInOutInterpolator(!0);
        case "easeIn":
          return (new CAAT.Behavior.Interpolator).createExponentialInInterpolator(6, !1);
        case "easeOut":
          return (new CAAT.Behavior.Interpolator).createExponentialOutInterpolator(6, !1);
        case "easeInOut":
          return (new CAAT.Behavior.Interpolator).createExponentialInOutInterpolator(6, !1);
        case "bounce":
          return (new CAAT.Behavior.Interpolator).createBounceOutInterpolator(!1);
        case "elastic":
          return (new CAAT.Behavior.Interpolator).createElasticOutInterpolator(1, .2, !1);
        case "linear":
          return (new CAAT.Behavior.Interpolator).createLinearInterpolator(!1, !1);
        default:
          return (new CAAT.Behavior.Interpolator).createLinearInterpolator(!1, !1);
      }
    }
    function U() {
      if (0 < jQuery("#elem-" + C).length) {
        for (;0 < jQuery("#elem-" + C).length;) {
          if (C++, 0 >= jQuery("#elem-" + C).length) {
            return "elem-" + C;
          }
        }
      } else {
        return C++, "elem-" + (C - 1);
      }
    }
    function W(d) {
      for (var e = 0;e < b[a].actorElems.length;e++) {
        if (b[a].actorElems[e].elemID == d) {
          return e;
        }
      }
    }
    function ea() {
      var d = parseInt(a) + 1;
      d >= b.length && (d = 0);
      p.easeInOut(d, b[d].sceneDetails.incomingMotion, b[d].sceneDetails.incomingAnchor, a, b[a].sceneDetails.incomingMotion, b[a].sceneDetails.incomingAnchor, 1E3 * b[a].sceneDetails.sceneTime, 1, r(b[d].sceneDetails.incomingEasing), r(b[a].sceneDetails.incomingEasing));
      a = d;
      jQuery(m + " .curvy-slider-nav .active").length && (jQuery(m + " .curvy-slider-nav .active").removeClass("active"), jQuery(m + ' .curvy-nav-elem[data-ref="nav-elem-' + a + '"]').addClass("active"));
      u ? B() : (clearInterval(A), L());
    }
    function da() {
      var d = parseInt(a) - 1;
      0 > a - 1 && (d = b.length - 1);
      p.easeInOut(d, b[d].sceneDetails.incomingMotion, b[d].sceneDetails.incomingAnchor, a, b[a].sceneDetails.incomingMotion, b[a].sceneDetails.incomingAnchor, 1E3 * b[a].sceneDetails.sceneTime, 1, r(b[d].sceneDetails.incomingEasing), r(b[a].sceneDetails.incomingEasing));
      a = d;
      jQuery(m + " .curvy-slider-nav .active").length && (jQuery(m + " .curvy-slider-nav .active").removeClass("active"), jQuery(m + ' .curvy-nav-elem[data-ref="nav-elem-' + a + '"]').addClass("active"));
      u ? B() : (clearInterval(A), L());
    }
    function K(a, b) {
      var f;
      f = a.Actor.width;
      var c = a.Actor.height, h = a.path.numControlPoints();
      a.outCoordsArray = [];
      for (var g = 0;g < h;g++) {
        a.outCoordsArray.push(a.path.getControlPoint(g));
      }
      if ("noMotion" != b) {
        if ("toRight" == b) {
          f = "image" == a.objType ? parseInt(w) + 240 + parseInt(f) / 2 + 40 : parseInt(w) + 240 + 40, f = (new CAAT.LinearPath).setInitialPosition(parseInt(a.outCoordsArray[2].x), parseInt(a.outCoordsArray[2].y)).setFinalPosition(parseInt(f), parseInt(a.outCoordsArray[2].y));
        } else {
          if ("toLeft" == b) {
            f = "image" == a.objType ? -40 - parseInt(f) / 2 : -40 - parseInt(f), f = (new CAAT.LinearPath).setInitialPosition(parseInt(a.outCoordsArray[2].x), parseInt(a.outCoordsArray[2].y)).setFinalPosition(parseInt(f), parseInt(a.outCoordsArray[2].y));
          } else {
            if ("toTop" == b) {
              f = "image" == a.objType ? -40 - parseInt(c) / 2 : -40 - parseInt(c), f = (new CAAT.LinearPath).setInitialPosition(parseInt(a.outCoordsArray[2].x), parseInt(a.outCoordsArray[2].y)).setFinalPosition(parseInt(a.outCoordsArray[2].x), parseInt(f));
            } else {
              if ("toBottom" == b) {
                f = "image" == a.objType ? 150 + parseInt(x) + 40 + parseInt(c) / 2 : 150 + parseInt(x) + 40, f = (new CAAT.LinearPath).setInitialPosition(parseInt(a.outCoordsArray[2].x), parseInt(a.outCoordsArray[2].y)).setFinalPosition(parseInt(a.outCoordsArray[2].x), parseInt(f));
              } else {
                "alpha" == b && a.Actor.setGlobalAlpha(!0).addBehavior((new CAAT.Behavior.AlphaBehavior).setValues(a.endAlpha, 0).setDelayTime(parseInt(a.motionTime) + parseInt(a.delayTime) + parseInt(a.waitOnSceneTime), parseInt(a.outOfSceneTime)));
                return;
              }
            }
          }
        }
        a.Actor.addBehavior((new CAAT.Behavior.PathBehavior).setValues(f).setDelayTime(a.motionTime + a.delayTime + a.waitOnSceneTime, a.outOfSceneTime).setCycle(!1).setAutoRotate(!1).setInterpolator(a.easing));
      }
    }
    var b = [], a = 0, Q = "ontouchstart" in window, T, m, t, z, O = [], Z = 0, F = !1, w = 1920, x = 700, y = ma, R = !1, G = [];
    T = ia;
    m = "#" + ja;
    t = ka;
    z = la;
    (function() {
      jQuery(m + " .curvy-slider-side-nav-container").length && (jQuery(document).on("click touchend", m + " .curvy-side-nav-left", function() {
        da();
      }), jQuery(document).on("click touchend", m + " .curvy-side-nav-right", function() {
        ea();
      }), jQuery(window).resize(function() {
        jQuery(document).trigger("curvyslider:reset_side_nav");
      }), jQuery(document).on("curvyslider:curvy_ready", function() {
        jQuery(m + " .curvy-slider-side-nav-container").css("display", "inline");
      }));
      if ("nav_regular" === y && jQuery(m + " .curvy-slider-nav-container").length) {
        jQuery(document).on("click touchend", m + " .curvy-nav-elem", function() {
          var b = parseInt(jQuery(this).attr("data-ref").toString().replace("nav-elem-", ""));
          if (b != a) {
            var e = !1;
            "true" === z && !1 === u && (e = !0, "activate_nav" == y ? jQuery(m + " #stopAllScenesBtn").trigger("click") : S());
            H() ? N(b) : (I(b), B());
            e && ("activate_nav" === y ? jQuery(m + " #playAllScenesBtn").trigger("click") : J());
            jQuery(m + " .curvy-nav-elem.active").removeClass("active");
            jQuery(this).addClass("active");
          }
        });
      } else {
        if ("replay" === y) {
          jQuery(document).on("click touchend", m + " .curvy-replay-button", function() {
            B();
          });
        }
      }
    })();
    (function() {
      jQuery(document).on("click", m + " #stopAllScenesBtn", function() {
        S();
      });
    })();
    (function() {
      jQuery(document).on("click", m + " #playAllScenesBtn", function() {
        J();
      });
    })();
    null != X && (h = X, "undefined" == typeof h.slider_width && (h.slider_width = 1920), "undefined" == typeof h.slider_height && (h.slider_height = 700), w = h.slider_width, x = h.slider_height, "fullscreen" == h.slider_size_mode && (R = !0), oa(), H() ? (na(), N(0), "activate_nav" === y && jQuery(m + ' .curvy-nav-elem[data-ref="nav-elem-0"]').addClass("active")) : pa());
    var h, p, ba, E = !1;
    jQuery(m + " #playBtn").live("click", function() {
      E || (E = !0, B(), setTimeout(function() {
        E = !1;
      }, 1E3 * b[a].sceneDetails.sceneDelay));
    });
    var u = !1, A, ha = 0, M = 0;
    jQuery(window).blur(function() {
      u || "undefined" === typeof A || (M = 1E3 * b[a].sceneDetails.sceneDelay - ((new Date).getTime() - ha), clearTimeout(A));
    });
    jQuery(window).focus(function() {
      u || 0 === M || (A = setTimeout(ga, M), M = 0);
    });
    var C = 0;
  };
})();